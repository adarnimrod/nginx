---
# tasks file for ansible-role-nginx

- name: Check if dhparams file exists
  stat:
    path: /etc/ssl/dhparams.pem
  register: stat_dhparams

- assert:
    that:
    - ansible_os_family in [ 'Debian', 'OpenBSD' ]
    - stat_dhparams.stat.exists

- name: APT install
  when: ansible_pkg_mgr == 'apt'
  apt:
    name: nginx-full
    state: present
    update_cache: yes
    cache_valid_time: 3600

- name: pkg install
  when: ansible_pkg_mgr == 'openbsd_pkg'
  openbsd_pkg:
    name: '{{ nginx_openbsd_pkg[ansible_distribution_release] }}'
    state: present

- name: Get Nginx version
  nginx_facts:

- name: Create configuration directories
  with_items:
  - /etc/nginx/sites-enabled
  - /etc/nginx/conf.d
  file:
    path: '{{ item }}'
    owner: root
    group: 0
    mode: 0o0755
    state: directory

- name: Configure
  with_items:
  - line: include /etc/nginx/sites-enabled/*;
    regexp: /etc/nginx/sites-enabled
  - line: include /etc/nginx/conf.d/*.conf;
    regexp: /etc/nginx/conf.d
  - line: 'access_log syslog:server=127.0.0.1;'
    regexp: access_log
  - line: 'error_log syslog:server=127.0.0.1;'
    regexp: error_log
  - line: 'ssl_dhparam /etc/ssl/dhparams.pem;'
    regexp: ssl_dhparam
  lineinfile:
    dest: /etc/nginx/nginx.conf
    line: '{{ item.line }}'
    insertafter: 'http {'
    regexp: '{{ item.regexp|default(omit) }}'
    state: present
  notify:
  - Reload Nginx

- name: Disable default Nginx site
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent
  notify:
  - Reload Nginx

- name: Copy virtualhosts templates
  with_fileglob:
  - templates/nginx/sites-enabled/*
  template:
      src: '{{ item }}'
      dest: '/etc/nginx/sites-enabled/{{ item|basename }}'
      owner: root
      group: 0
      mode: 0o0644
  notify:
  - Reload Nginx

- name: Copy config templates
  with_fileglob:
  - templates/nginx/conf.d/*.conf
  template:
      src: '{{ item }}'
      dest: '/etc/nginx/conf.d/{{ item|basename }}'
      owner: root
      group: 0
      mode: 0o0644
  notify:
  - Reload Nginx

- name: Alias emails to root
  lineinfile:
      dest: '{{ aliases_file[ansible_os_family] }}'
      create: yes
      line: '{{ nginx_user[ansible_os_family] }}: root'
      regexp: '{{ nginx_user[ansible_os_family] }}:'
  notify:
      - Update SMTPd database

- name: Enable service
  service:
      name: nginx
      state: running
      enabled: yes

- meta: flush_handlers

- name: Wait for Nginx to recieve requests
  wait_for:
      port: 80
